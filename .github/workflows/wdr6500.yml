name: wdr6500 openwrt CI

on:
  workflow_dispatch:
  push:
    branches: [ tl-wdr6500 ]
  pull_request:
    branches: [ tl-wdr6500 ]

jobs:
  build:
    name: build wdr6500 openwrt
    runs-on: ubuntu-latest

    steps:
    - name: cleanup ubuntu server
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get install -y binutils bzip2 diffutils flex gawk gcc grep libc-dev libz-dev make perl python-is-python3 rsync subversion unzip
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

    - name: checkout
      uses: actions/checkout@v3
      with:
          ref: tl-wdr6500

    - name: prepare output
      run: |
          sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          ln -s /mnt/openwrt/bin ./bin
          mkdir -p ./build_dir
          ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          ln -s /mnt/openwrt/dl ./dl
          ln -s /mnt/openwrt/feeds ./feeds
          ln -s /mnt/openwrt/staging_dir ./staging_dir
          echo "space usage:"
          echo "======================="
          df -h
          echo "======================="
          free
          echo "======================="

    - name: update feeds
      run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

    - name: make defconfigure
      run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_ath79_generic_DEVICE_tplink_tl-wdr6500-v2=y
          CONFIG_PACKAGE_cgi-io=y
          CONFIG_DEVEL=y
          CONFIG_NEED_TOOLCHAIN=y
          CONFIG_BPF_TOOLCHAIN=y
          CONFIG_BPF_TOOLCHAIN_BUILD_LLVM=y
          CONFIG_SDK=y
          CONFIG_SDK_LLVM_BPF=y
          CONFIG_MAKE_TOOLCHAIN=y
          CONFIG_PACKAGE_libbpf=m
          CONFIG_PACKAGE_libelf=m
          CONFIG_PACKAGE_libiwinfo-lua=y
          CONFIG_PACKAGE_liblua=y
          CONFIG_PACKAGE_liblucihttp=y
          CONFIG_PACKAGE_liblucihttp-lua=y
          CONFIG_PACKAGE_libubus-lua=y
          CONFIG_PACKAGE_lua=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-lib-base=y
          CONFIG_PACKAGE_luci-lib-ip=y
          CONFIG_PACKAGE_luci-lib-jsonc=y
          CONFIG_PACKAGE_luci-lib-nixio=y
          CONFIG_PACKAGE_luci-mod-admin-full=y
          CONFIG_PACKAGE_luci-mod-network=y
          CONFIG_PACKAGE_luci-mod-status=y
          CONFIG_PACKAGE_luci-mod-system=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-proto-ppp=y
          CONFIG_PACKAGE_luci-ssl=y
          CONFIG_PACKAGE_luci-theme-bootstrap=y
          CONFIG_PACKAGE_qosify=m
          CONFIG_PACKAGE_rpcd=y
          CONFIG_PACKAGE_rpcd-mod-file=y
          CONFIG_PACKAGE_rpcd-mod-iwinfo=y
          CONFIG_PACKAGE_rpcd-mod-luci=y
          CONFIG_PACKAGE_rpcd-mod-rrdns=y
          CONFIG_PACKAGE_tc-bpf=m
          CONFIG_PACKAGE_tc-full=m
          CONFIG_PACKAGE_tc-mod-iptables=m
          CONFIG_PACKAGE_uhttpd=y
          CONFIG_PACKAGE_uhttpd-mod-lua=y
          CONFIG_PACKAGE_uhttpd-mod-ubus=y
          CONFIG_PACKAGE_xdp-filter=m
          CONFIG_PACKAGE_xdp-loader=m
          CONFIG_PACKAGE_xdpdump=m
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

    - name: download
      run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          echo "space usage:"
          echo "======================="
          df -h
          echo "======================="
          free
          echo "======================="

    - name: compile firmware
      run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "space usage:"
          echo "======================="
          df -h
          echo "======================="
          free
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

    - name: prepare artifact
      run: |
          mkdir -p ./artifact/
          cp -rf $(find ./bin/targets/ -name "*.bin" -type f) ./artifact/

    - name: deliver firmware
      uses: actions/upload-artifact@v3
      with:
          name: openwrt_firmware
          path: ./artifact/
